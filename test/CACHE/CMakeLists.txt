IF(NOT  DEFINED CMAKE_SCRIPT_MODE_FILE)
	CMAKE_MINIMUM_REQUIRED(VERSION 3.16)
	PROJECT(BIMCM_CACHE_TEST)
ENDIF()

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/../../")
FIND_PACKAGE(BIMCM)
FIND_PACKAGE(BIMCM)

INCLUDE("${CMAKE_CURRENT_LIST_DIR}/../TEST.cmake")

OPTION(TEST_ARCHIVE_CMAKE_CACHE_DELETED OFF
	"Flag that the cache was delete")

OPTION(TEST_ARCHIVE_RECURSE_ON ON
	"Flags that cmake is called recursively")

SET(BASE_CACHE_PATH "${BIMCM_REQUIRED_ENV_TMP_PATH}/${_BIMCM_CACHE_VAR_DIRECTORY_NAME}")



FUNCTION(TEST_CACHE_EMPTY)
	SET(base_cache_path "${BIMCM_REQUIRED_ENV_TMP_PATH}/${_BIMCM_CACHE_VAR_DIRECTORY_NAME}")
	TEST_VAR_PATH_NOT_EXISTS(base_cache_path)
ENDFUNCTION()

FUNCTION(TEST_CACHE_TEST_DELETE_CACHE)
	IF(NOT TEST_ARCHIVE_CMAKE_CACHE_DELETED)
		TEST_CACHE_EMPTY()
	ENDIF()
	BIMCM_CACHE_ADD(
		KEYWORDS CA DELETE A
		PATH "${CMAKE_CURRENT_LIST_DIR}/CacheA_B_C.txt"
	)
	BIMCM_CACHE_ADD(
		KEYWORDS CA DELETE B
		PATH ${CMAKE_CURRENT_LIST_DIR}/CacheA_NOPATH_DIRECTORY.txt
	)
	BIMCM_CACHE_DELETE(KEYWORDS CA DELETE A)
	SET(desired "${BASE_CACHE_PATH}/file/CA/DELETE/B/CacheA_NOPATH_DIRECTORY.txt")
	TEST_VAR_PATH_EXISTS(desired)

	BIMCM_CACHE_DELETE(KEYWORDS CA DELETE B)

	IF(NOT TEST_ARCHIVE_CMAKE_CACHE_DELETED)
		TEST_CACHE_EMPTY()
	ENDIF()

	BIMCM_CACHE_ADD(
		KEYWORDS CA DELETE DIRA
		PATH ${CMAKE_CURRENT_LIST_DIR}/cache_directory
	)
	BIMCM_CACHE_ADD(
		KEYWORDS CA DELETE DIRB
		PATH ${CMAKE_CURRENT_LIST_DIR}/cache_directory
	)
	BIMCM_CACHE_DELETE(KEYWORDS CA DELETE DIRB)

	BIMCM_CACHE_GET(
		KEYWORDS CA DELETE DIRA
		CACHE_PATH_VAR a
	)

	SET(desired "${BASE_CACHE_PATH}/dir/CA/DELETE/DIRA/CacheA.txt")
	TEST_VAR_PATH_EXISTS(desired)
	BIMCM_CACHE_DELETE(KEYWORDS CA DELETE DIRA)
	IF(NOT TEST_ARCHIVE_CMAKE_CACHE_DELETED)
		TEST_CACHE_EMPTY()
	ENDIF()
ENDFUNCTION()

FUNCTION(TEST_CACHE_ADD_FILE)
	BIMCM_CACHE_ADD(
		KEYWORDS A B CC
		PATH ${CMAKE_CURRENT_LIST_DIR}/CacheA_B_C.txt
		CACHE_PATH_VAR add_abc_a
	)
	TEST_VAR_DEFINED(add_abc_a)

	BIMCM_CACHE_ADD(
		KEYWORDS A B CCB
		PATH ${CMAKE_CURRENT_LIST_DIR}/CacheA_B_C.txt
		CACHE_PATH_VAR add_abc_b
	)
	TEST_VAR_DEFINED(add_abc_b)

	BIMCM_CACHE_GET(
		KEYWORDS A B CCB
		CACHE_PATH_VAR get_abc
	)
	TEST_VAR_EQUAL(get_abc add_abc_b)

	SET(desired "${BIMCM_REQUIRED_ENV_TMP_PATH}/${_BIMCM_CACHE_VAR_DIRECTORY_NAME}/file/A/B/CCB/CacheA_B_C.txt")
	TEST_VAR_EQUAL(desired get_abc)
	TEST_VAR_PATH_EXISTS(desired)
ENDFUNCTION()

FUNCTION(TEST_CACHE_ADD_DIRECTORY)
	BIMCM_CACHE_ADD(
		KEYWORDS A B DIRECTORY
		PATH ${CMAKE_CURRENT_LIST_DIR}/cache_directory
		CACHE_PATH_VAR add_abc_a
	)
	TEST_VAR_DEFINED(add_abc_a)

	BIMCM_CACHE_ADD(
		KEYWORDS A B DIRECTORYB
		PATH ${CMAKE_CURRENT_LIST_DIR}/cache_directory
		CACHE_PATH_VAR add_abc_b
	)
	TEST_VAR_DEFINED(add_abc_b)

	BIMCM_CACHE_GET(
		KEYWORDS A B DIRECTORY
		CACHE_PATH_VAR get_abc
	)
	TEST_VAR_EQUAL(get_abc add_abc_a)

	SET(desired "${BIMCM_REQUIRED_ENV_TMP_PATH}/${_BIMCM_CACHE_VAR_DIRECTORY_NAME}/dir/A/B/DIRECTORY")
	TEST_VAR_EQUAL(desired get_abc)
	TEST_VAR_PATH_EXISTS(desired)
ENDFUNCTION()

FUNCTION(TEST_CACHE_NO_CACHE_PATH_VAR)
	BIMCM_CACHE_ADD(
		KEYWORDS A NOPATH DIRECTORY
		PATH ${CMAKE_CURRENT_LIST_DIR}/CacheA_NOPATH_DIRECTORY.txt
	)
	BIMCM_CACHE_GET(
		KEYWORDS A NOPATH DIRECTORY
		CACHE_PATH_VAR get_abdir
	)
	SET(desired "${BIMCM_REQUIRED_ENV_TMP_PATH}/${_BIMCM_CACHE_VAR_DIRECTORY_NAME}/file/A/NOPATH/DIRECTORY/CacheA_NOPATH_DIRECTORY.txt")
	TEST_VAR_EQUAL(desired get_abdir)
	TEST_VAR_PATH_EXISTS(desired)
ENDFUNCTION()

FUNCTION(TEST_CACHE_PERMUTATION_ALLOWED)
	BIMCM_CACHE_ADD(
		KEYWORDS A B PERMUTATION
		PATH ${CMAKE_CURRENT_LIST_DIR}/CacheA_NOPATH_DIRECTORY.txt
	)
	BIMCM_CACHE_ADD(
		KEYWORDS A PERMUTATION B
		PATH ${CMAKE_CURRENT_LIST_DIR}/CacheA_NOPATH_DIRECTORY.txt
		KEYWORDS_PERMUTATION_ALLOWED ON
	)
	BIMCM_CACHE_GET(
		KEYWORDS A NOPATH DIRECTORY
		CACHE_PATH_VAR get_abdir
	)
	TEST_VAR_DEFINED(get_abdir)
ENDFUNCTION()

FUNCTION(TEST_CACHE_ADD_WITHOUT_ENTRY)
	BIMCM_CACHE_ADD(
		KEYWORDS A B NOENTRY
		PATH ${CMAKE_CURRENT_LIST_DIR}/CacheA_NOPATH_DIRECTORY.txt
		CACHE_PATH_VAR var_a_b_noentry
	)
	LIST(REMOVE_ITEM BIMCM_CACHE_ENTRY_LIST ${_BIMCM_CACHE_VAR_ENTRY_PREFIX}_A_B_NOENTRY)
	UNSET(${_BIMCM_CACHE_VAR_ENTRY_PREFIX}_A_B_NOENTRY)
	BIMCM_CACHE_HAS_FILE(
		KEYWORDS A B NOENTRY
		PATH_VAR path_var
	)
	TEST_VAR_DEFINED(path_var)
	BIMCM_CACHE_ADD(
		KEYWORDS A B NOENTRY
		PATH ${CMAKE_CURRENT_LIST_DIR}/CacheA_NOPATH_DIRECTORY.txt
		CACHE_PATH_VAR var_a_b_noentry_second
	)
	TEST_VAR_EQUAL(var_a_b_noentry var_a_b_noentry_second)
ENDFUNCTION()

FUNCTION(TEST_CACHE_GET_IF_EXIST_FLAG)
	BIMCM_CACHE_ADD(
		KEYWORDS GET IF EXISTS A
		PATH ${CMAKE_CURRENT_LIST_DIR}/CacheA_NOPATH_DIRECTORY.txt
		CACHE_PATH_VAR var_get_if_exists
	)
	BIMCM_CACHE_ADD(
		KEYWORDS GET IF EXISTS A
		PATH ${CMAKE_CURRENT_LIST_DIR}/CacheA_NOPATH_DIRECTORY.txt
		CACHE_PATH_VAR var_get_if_exists_second
		GET_IF_EXISTS ON
	)
	TEST_VAR_EQUAL(var_get_if_exists var_get_if_exists_second)
ENDFUNCTION()

FUNCTION(TEST_CACHE_REGENERATE_CACHE)
ENDFUNCTION()

FUNCTION(TEST_CACHE_DELETE)
	BIMCM_CACHE_DELETE(KEYWORDS A B DIRECTORY)
	BIMCM_CACHE_DELETE(KEYWORDS A B DIRECTORYB)
	BIMCM_CACHE_DELETE(KEYWORDS A B CC)
	BIMCM_CACHE_DELETE(KEYWORDS A B CCB)
	BIMCM_CACHE_DELETE(KEYWORDS A NOPATH DIRECTORY)
	BIMCM_CACHE_DELETE(KEYWORDS A B PERMUTATION)
	BIMCM_CACHE_DELETE(KEYWORDS A PERMUTATION B)
	BIMCM_CACHE_DELETE(KEYWORDS A B NOENTRY)
	BIMCM_CACHE_DELETE(KEYWORDS GET IF EXISTS A)
ENDFUNCTION()

FUNCTION(TEST_CACHE_RECURSE_DIRECTORIES)
	EXECUTE_PROCESS(
		COMMAND "cmake" -DTEST_CACHE_DIRECTORY_RECURSE=ON  "."
		WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/cache_keywords_prefix"
		RESULT_VARIABLE result_var
		ERROR_VARIABLE errout
		OUTPUT_VARIABLE stdout
	)
	IF(result_var EQUAL 0)
		MESSAGE(${stdout})
		MESSAGE(${errout})
		MESSAGE(FATAL_ERROR "Recurse cache - file - invalid test result")
	ENDIF()
	EXECUTE_PROCESS(
		COMMAND "cmake" -DTEST_CACHE_FILE_RECURSE=ON  "."
		WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/cache_keywords_prefix"
		RESULT_VARIABLE result_var
		ERROR_VARIABLE errout
		OUTPUT_VARIABLE stdout
	)
	IF(result_var EQUAL 0)
		MESSAGE(${stdout})
		MESSAGE(${errout})
		MESSAGE(FATAL_ERROR "Recurse cache - directory - invalid test result")
	ENDIF()
ENDFUNCTION()



IF(NOT TEST_ARCHIVE_CMAKE_CACHE_DELETED)
	TEST_CACHE_EMPTY()
ENDIF()

TEST_CACHE_TEST_DELETE_CACHE()

TEST_CACHE_ADD_FILE()
TEST_CACHE_ADD_DIRECTORY()
TEST_CACHE_NO_CACHE_PATH_VAR()
TEST_CACHE_PERMUTATION_ALLOWED()
TEST_CACHE_GET_IF_EXIST_FLAG()
TEST_CACHE_RECURSE_DIRECTORIES()

IF(TEST_ARCHIVE_RECURSE_ON)
	#
	# This will test cache regeneration
	#
	FILE(REMOVE "${CMAKE_CURRENT_BINARY_DIR}/CMakeCache.txt")

	SET(arg)
	IF(NOT DEFINED CMAKE_SCRIPT_MODE_FILE)
		SET(arg "${CMAKE_CURRENT_LIST_DIR}")
	ELSE()
		SET(arg -P "${CMAKE_CURRENT_LIST_DIR}/CMakeLists.txt")
	ENDIF()
	EXECUTE_PROCESS(
		COMMAND "cmake" -DBIMCM_DEBUG=ON -DTEST_ARCHIVE_RECURSE_FLAG=ON "${CMAKE_CURRENT_LIST_DIR}"
		WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
		RESULT_VARIABLE result_var
		ERROR_VARIABLE errout
		OUTPUT_VARIABLE stdout
	)
	IF(NOT result_var EQUAL 0)
		MESSAGE(${stdout})
		MESSAGE(${errout})
		MESSAGE(FATAL_ERROR "Invalid test result")
	ENDIF()
ELSE()
	TEST_CACHE_DELETE()
	TEST_CACHE_ADD_WITHOUT_ENTRY()
	TEST_CACHE_DELETE()
	TEST_CACHE_EMPTY()
ENDIF()

