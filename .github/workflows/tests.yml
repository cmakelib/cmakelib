name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
  
jobs:
  test_linux:
    strategy:
      matrix:
        image: ["test_debian:bullseye", "test_debian:bookworm", 
          "test_ubuntu:2004", "test_ubuntu:2204", "test_ubuntu:2404",
          "test_fedora:41"]
    runs-on: ubuntu-latest
    container:
        image: ghcr.io/cmakelib/${{ matrix.image }}
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSHKEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run tests
        run: |
            git config --global --add safe.directory "$(pwd)"
            git remote set-url origin "${{ github.server_url }}/${{ github.repository }}"
            cd test/ && cmake -DCMLIB_DEBUG=ON .
            
  test_linux_script:
    strategy:
      matrix:
        image: ["test_debian:bullseye", "test_debian:bookworm", 
          "test_ubuntu:2004", "test_ubuntu:2204", "test_ubuntu:2404",
          "test_fedora:41"]
    runs-on: ubuntu-latest
    container:
        image: ghcr.io/cmakelib/${{ matrix.image }}
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSHKEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run tests
        run: |
            git config --global --add safe.directory "$(pwd)"
            git remote set-url origin "${{ github.server_url }}/${{ github.repository }}"
            cd test/ && cmake -DCMLIB_DEBUG=ON -P ./CMakeLists.txt

  test_macos_11:
    runs-on: macos-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSHKEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run tests
        run: cd test && cmake -DCMLIB_DEBUG=ON .

  test_macos_11_script:
    runs-on: macos-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSHKEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run tests
        run: cd test && cmake -DCMLIB_DEBUG=ON -P ./CMakeLists.txt

  test_windows:
    runs-on: windows-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSHKEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Run tests
        run: cd test/ && cmake -DCMLIB_DEBUG=ON .

  test_windows_script:
    runs-on: windows-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSHKEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run tests
        run: cd test/ && cmake -DCMLIB_DEBUG=ON -P ./CMakeLists.txt
  
